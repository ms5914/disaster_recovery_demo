version: '3.8'

services:
  primary-server:
    build: 
      context: .
      dockerfile: app/Dockerfile
    container_name: primary-server
    environment:
      - ROLE=primary
      - REPLICA_HOST=backup-server
    ports:
      - "5002:5000"
    networks:
      - dr-network
    volumes:
      - ./data/primary:/app/data    # Changed to relative path
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  backup-server:
    build: 
      context: .
      dockerfile: app/Dockerfile
    container_name: backup-server
    environment:
      - ROLE=backup
      - PRIMARY_HOST=primary-server
    ports:
      - "5003:5000"
    networks:
      - dr-network
    volumes:
      - ./data/backup:/app/data     # Changed to relative path
    depends_on:
      - primary-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  load-balancer:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: load-balancer
    ports:
      - "8080:80"
    networks:
      - dr-network
    depends_on:
      - primary-server
      - backup-server
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 2s
      timeout: 10s
      retries: 3

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: client
    environment:
      - LOAD_BALANCER_HOST=load-balancer
      - LOAD_BALANCER_PORT=80
      - INITIAL_DELAY_SECONDS=15
      - REQUEST_INTERVAL_SECONDS=2
      - PRIMARY_HOST=primary-server
      - PRIMARY_PORT=5000
    networks:
      - dr-network
    depends_on:
      load-balancer:
        condition: service_healthy


  # Add Prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - dr-network

  # Add Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - dr-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=5s
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: nginx-exporter
    command:
      - -nginx.scrape-uri=http://load-balancer:80/nginx_status
    networks:
      - dr-network
    depends_on:
      - load-balancer

networks:
  dr-network:
    driver: bridge

volumes:
  grafana-data:  
